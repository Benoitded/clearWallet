(()=>{"use strict";function e(){const e=document.createElement("script");e.src=chrome.runtime.getURL("inpage.js"),e.type="text/javascript",(document.head||document.documentElement).appendChild(e),e.onload=()=>{e.remove(),console.log("ClearWallet: Main provider script injected"),window.postMessage({type:"CLEARWALLET_CONTENT_SCRIPT_READY",data:{ready:!0}},"*")}}function t(){setTimeout(()=>{const e=document.createElement("script");e.src=chrome.runtime.getURL("inject-aggressive.js"),e.type="text/javascript",(document.head||document.documentElement).appendChild(e),e.onload=()=>{e.remove(),console.log("ClearWallet: Aggressive injection completed")}},100)}console.log("ClearWallet: Content script loading..."),window.addEventListener("message",async e=>{if(e.source!==window)return;const{type:t,data:o,id:n}=e.data;if(t&&t.startsWith("CLEARWALLET_")&&!t.includes("_RESPONSE"))try{console.log("ClearWallet: Forwarding message to background:",t);const e=await chrome.runtime.sendMessage({type:t.replace("CLEARWALLET_",""),data:o});window.postMessage({type:`${t}_RESPONSE`,data:e,id:n},"*")}catch(e){console.error("ClearWallet: Error forwarding message:",e),window.postMessage({type:`${t}_RESPONSE`,data:{error:e instanceof Error?e.message:"Unknown error"},id:n},"*")}}),chrome.runtime.onMessage.addListener((e,t,o)=>{console.log("ClearWallet: Message from background:",e);const n={...e,type:e.type.startsWith("CLEARWALLET_")?e.type:`CLEARWALLET_${e.type}`};return window.postMessage(n,"*"),!0}),console.log("ClearWallet: Starting injection sequence"),function(){const e=document.createElement("script");e.src=chrome.runtime.getURL("priority.js"),e.type="text/javascript",(document.head||document.documentElement).prepend(e),e.onload=()=>e.remove(),console.log("ClearWallet: Priority script injected")}(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{e(),t()}):(e(),t()),setTimeout(()=>{window.ethereum&&window.ethereum.isClearWallet||(console.log("ClearWallet: Backup injection attempt"),e(),t())},500),setTimeout(()=>{window.ethereum&&window.ethereum.isClearWallet||(console.log("ClearWallet: Final injection attempt"),t())},1e3)})();